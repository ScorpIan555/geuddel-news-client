import React, { Component } from 'react'
import { connect } from 'react-redux'
import { CustomModal, SearchBox } from './containers'
import { UserMgtButton, Nav, Sidebar, LandingPage, Footer } from './presentation'
import { NewsapiUrlUtility } from '../utils'
import actions from '../actions'


class Home extends Component {
  constructor() {
    super()
    this.state = {
      signupVisible: false,
      loginVisible: false,
      advancedSearchVisible: false
    }
    this.toggleModal = this.toggleModal.bind(this)
    this.handleClick = this.handleClick.bind(this)
    this.toggleSignupModal = this.toggleSignupModal.bind(this)
    this.toggleLoginModal = this.toggleLoginModal.bind(this)
    // this.toggleAdvancedSearchModal = this.toggleAdvancedSearchModal.bind(this)
  }

  componentDidMount() {
    console.log('Home.componentDidMount')

    this.props.getTopHeadlinesNewsFeed()
  }


  toggleModal(event) { // might refactor this into two functions, on for each type of modal
    event.preventDefault()
    console.log('event', event)

    if(event.target.id == '#signupModal') {
      this.setState({
        signupVisible: !this.state.signupVisible
      })
      return
    }
    if(event.target.id == '#loginModal') {
      this.setState({
        loginVisible: !this.state.loginVisible
      })
      return
    }
    if(event.target.id == '#advancedSearchModal') {
      this.setState({
        advancedSearchVisible: !this.state.advancedSearchVisible
      })
    }
    // To close an open modal, event.target.id == ''
    if(event.target.id == '') {
      this.setState({
        signupVisible: false,
        loginVisible: false,
        advancedSearchVisible: false
      })
      return
    }
  }

  toggleSignupModal(event) {
    event.preventDefault()
    this.setState({
      signupVisible: !this.state.signupVisible
    })
  }

  toggleLoginModal(event) {
    event.preventDefault()
    this.setState({
      loginVisible: !this.state.loginVisible
    })
  }

  handleClick() {
    console.log('handleClick!')
    // debugger
    // Handle click events from sidebar links

    const topicQueryInput = 'us'
    const countryCode = 'us'

    switch (topicQueryInput) {

      case 'us':

        return this.props.getTopHeadlinesNewsFeed()

      case 'top-headlines':

        return this.props.getTopHeadlinesNewsFeed()

      default:

        return this.props.getTopicSpecificNewsFeed(topic)
      }
  }

  render() {
    const articles = this.props.articles || []
    const articlesWithImgThumbnails = (this.props.articles !== undefined) ? articles.filter(article => article.urlToImage !== null || undefined || '' || NaN ) : null
    let modalType = ''
    const userLocation = {
      country_code: 'US'
    }

    return(
      <div>
                                    <CustomModal
                                                  visible={this.state.signupVisible}
                                                  onClickBackdrop={this.toggleModal}
                                                  modalName="Signup"
                                                  dialogClassName=""
                                                  className=""

                                    />

                                    <CustomModal
                                                  visible={this.state.loginVisible}
                                                  onClickBackdrop={this.toggleModal}
                                                  modalName="Login"
                                                  dialogClassName=""
                                                  className=""

                                    />

                                    <CustomModal
                                                  visible={this.state.advancedSearchVisible}
                                                  onClickBackdrop={this.toggleModal}
                                                  modalName="AdvancedSearch"
                                                  dialogClassName="modal-lg"
                                                  className=""
                                    />


        <div className="nav-container">

                                    <Nav
                                          toggleModal={this.toggleModal}
                                      />

        </div>
        <div className="main-container">
            <section className="space-sm">
                <div className="container">
                    <div className="row">
                        <div className="col-12 col-md-9 mb-1 order-md-2">

                                    <LandingPage
                                                  articles={articlesWithImgThumbnails}
                                                  userLocation={userLocation}

                                      />

                        </div>

                        <div className="col-12 col-md-3 mb-1 order-md-1">
                            <div className="card">
                                <div className="card-body">

                                    <Sidebar
                                             handleClick={this.handleClick}
                                             match={this.props.match}
                                             sidebarTop={this.props.sidebarTop}
                                             sidebarMiddle={this.props.sidebarMiddle}
                                     />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

                                    <Footer />
        </div>
      </div>
    )
  }
}

const stateToProps = (state) => {
  return {
    articles: state.newsFeed.articles,
    sidebarTop: state.newsFeed.sidebarTop,
    sidebarMiddle: state.newsFeed.sidebarMiddle
  }
}

const dispatchToProps = (dispatch) => {
  return {
    getTopHeadlinesNewsFeed: () => dispatch(actions.getTopHeadlinesNewsFeed()),
    getTopicSpecificNewsFeed: (newsapiUrl) => dispatch(actions.getTopicSpecificNewsFeed(newsapiUrl)),
  }
}

export default connect(stateToProps, dispatchToProps)(Home)
